HPCTEST TO DO


Bugs

- Must print additional report line w/ hpctk path if matrix has > 1 hpctk

- Too many blank lines before report (4)

-------------------------------------------------------------------------------------

- Clusterfuck when no yaml file in a test! Want polite error message.

		$ ./hpctest run "unit-test/*"
		----------------------------------------------------------------------
		running test unit-test/inline_macro with config %gcc and -e REALTIME@10000
		----------------------------------------------------------------------
		missing or invalid 'hpctest.yaml' file: yaml file cannot be opened: (error 2, No such file or directory)
		Traceback (most recent call last):
		  File "/home/scott/hpctest/internal/src/main.py", line 233, in <module>
		    if __name__ == "__main__": main()
		  File "/home/scott/hpctest/internal/src/main.py", line 63, in main
		    return execute(args)
		  File "/home/scott/hpctest/internal/src/main.py", line 187, in execute
		    tester.run(dims, args, numrepeats, reportspec, sortKeys, studyPath)
		  File "/home/scott/hpctest/internal/src/hpctest.py", line 150, in run
		    nonempty = Iterate.doForAll(dims, args, numrepeats, study)
		  File "/home/scott/hpctest/internal/src/iterate.py", line 71, in doForAll
		    status = run.run()
		  File "/home/scott/hpctest/internal/src/run.py", line 128, in run
		    self._addMissingOutputs()
		  File "/home/scott/hpctest/internal/src/run.py", line 530, in _addMissingOutputs
		    if self.wantProfiling and self.output.get("run") != "NA":
		AttributeError: Run instance has no attribute 'wantProfiling'
		$ 

- "Executing normal test:" vs "run:normal" in yaml =>
   - "normal" is inapt
   - "run" vs "test" is inconsistent
   
- check each dimension for emptiness; requires each Spec class to evaluate its spec

- hpctest clean -d does not delete all built dependencies. Survivors are:
  - libtool
  - m4
  - miniamr
  - pkg-config
  - util-macros

-------------------------------------------------------------------------------------


- Reporting:
	- Add variable-weight separators to report to indicate group changes
 	- optional summaries


- Alternation & wildcards in specs
 	- use 'compilerList = spack.compilers.all_compiler_specs()'
 	- or to find versions of a given compiler family,
 	  use e.g. 'compilerList = spack.compilers.find("gcc")'
 	- maybe 'compilerList = 'ppk = PackagePrefs("gcc", "compiler")'
 
 
- External repo + option to store dependencies (and compilers?) there


- Generate a top-level _OUT directory with whole-job summary info:
	- OUTs from each run
	- copy of reported table
	- Equivalent of run.log for whole job
	

- Batch job submission & polling
- Robust iteration & continuation
 
 
- Finish implementing 'numrepeats'


- Alternate input notation based on yaml
   
   
- Refactor for experiment classes
 
 
- Config defaults per platform and site




-------------------------------------------------------------------------------------
- Is it good to divide cpu limit among mpi ranks? Or let limit be per node?
-------------------------------------------------------------------------------------
 
 
 
 FUTURE WORK
- Spack team is working on support for iterating through concretizations of specs
  (of use in combinatorial testing) "for @tgamblin's planned package build testing".
  Todd: "With the new concretizer we will have a way to iterate through all solutions,
  which would cover this case, but we'd need to provide a syntax for what to explode
  combinatorially and what not to. The test-suite file does some of that, but it
  needs some support for iterating over legal combinations".
  See https://github.com/LLNL/spack/issues/4530.
  "The test-suite file" ??
 
  
 OTHER SPACK REPOS FOR HPC APPLICATIONS
 
Arm HPC Users Group / packages Â· GitLab
https://gitlab.com/arm-hpc/packages/wikis/categories/application



MINI-APPS FROM SPACK BUILTINS

CoMD:		https://github.com/ECP-copa/CoMD/blob/master/examples/mpi-strongScaling.sh
miniAero:	https://github.com/Mantevo/miniAero/tree/master/kokkos/tests
HPCCG:		https://github.com/Mantevo/HPCCG
miniMD:		https://github.com/Mantevo/miniMD
miniGhost:	https://github.com/Mantevo/miniGhost/blob/master/ref/runtest.mpi
miniSMAC:	https://github.com/Mantevo/miniSMAC/blob/master/ref/my_batch_script_mpi_and_threads.bash

amg
amg2013
amr-exp-parabolic
aspa
branson
candle-benchmarks
clamr
cleverleaf
cloverleaf
cloverleaf3d
cns-nospec
coevp
cohmm
comd
cosp2
ebms
ecp-proxy-apps
exampm
exasp2
hacckernels
hpccg
hpgmg
kripke
laghos
lcals
lulesh
macsio
miniaero
miniamr
minife
minighost
minimd
minismac2d
minitri
minixyce
nekbone
nginx
nut
openmc
pathfinder
pennant
rsbench
r-somaticsignatures
serf
simplemoc
smc
snap
snbone
sw4lite
swfft
tealeaf
tycho2
vpfft
xfwp
xrx
xsbench
