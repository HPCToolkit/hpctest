HPCTEST TO DO


Bugs

- found a study directory created inside a previous study directory!
- build time is always reported as 0



- Must print additional report line w/ hpctk path if matrix has > 1 hpctk

- check each dimension for emptiness; requires each Dimension class to evaluate its spec

- hpctest clean -d does not delete all built dependencies. Survivors are:
  - libtool
  - m4
  - miniamr
  - pkg-config
  - util-macros



SLURM

squeue output:
------------------------------------------------------------------------------------
Sat Jul 13 15:48:57 2019
             JOBID PARTITION     NAME     USER ST       TIME  NODES NODELIST(REASON)
            278061   commons app--lul  skw0897  R       9:53      1 c1
            278061   commons app--lul  skw0897  R      11:33      1 c1
			...
------------------------------------------------------------------------------------

squeue options:
--noheader
--user=



NEXT
- Refactor for experiment classes
- hide generated slurm command files
- delete generated slurm command files in 'hpctest clean'
- preserve generated slurm command files in OUT directory
- Config defaults per platform and site



CWD CONTEXT MANAGER
- make one in common.py
- use this: https://gist.github.com/bradmontgomery/4f4934893388f971c6c5



----------------
OUT.yaml ISSUES
----------------
		input:
		  date: 2018-11-20 23:25
		  test: app/amgmk
		  config spec: '%gcc'
		  hpctoolkit: /home/scott/hpctoolkit-current/hpctoolkit/INSTALL/bin
		  hpctoolkit params:
		    hpcrun: -e REALTIME@10000
		    hpcstruct: ''
		    hpcprof: ''
		  num repeats: 1
		  study dir: /home/scott/hpctest/work/study-2018-11-20--23-25-10
		  wantProfiling: 'True'
		  spack spec: amgmk@1.0%gcc
		build:
		  prefix: /home/scott/hpctest/internal/spack/opt/spack/linux-centos7-x86_64/gcc-4.8.5/amgmk-1.0-goaesak3c32dc6e7mjjrubwr4bdqzpkq
		  cpu time: 0.0
		  status: OK
		  status msg: already built
		run:
		  normal:
		    command: ' /bin/bash -c ''ulimit -c 204800 -u 500 -d 2097152 -f 2097152 -s 102400
		      -t unlimited ; export TIMEFORMAT=''%R %S %U''; time AMGMk 2> /home/scott/hpctest/work/study-2018-11-20--23-25-10/amgmk-%gcc--e.REALTIME@10000/OUT/02-normal-time.txt'' '
		    cpu time: null
		    status: OK
		    status msg: '... couldn''t determine normal cpu time'
		  profiled:
		    command: ' /bin/bash -c ''ulimit -c 204800 -u 500 -d 2097152 -f 2097152 -s 102400
		      -t unlimited ; export TIMEFORMAT=''%R %S %U''; time /home/scott/hpctoolkit-current/hpctoolkit/INSTALL/bin/hpcrun
		      -o /home/scott/hpctest/work/study-2018-11-20--23-25-10/amgmk-%gcc--e.REALTIME@10000/OUT/05-hpctoolkit-AMGMk-measurements
		      -t -e REALTIME@10000 AMGMk 2> /home/scott/hpctest/work/study-2018-11-20--23-25-10/amgmk-%gcc--e.REALTIME@10000/OUT/04-profiled-time.txt'' '
		    cpu time: null
		    status: OK
		    status msg: '... couldn''t determine profiled cpu time'
		    hpcrun overhead %: NA
		    hpcrun summary: NA
>>>>	  hpcrun:
>>>>	    output checks: OK
>>>>	    output msg: null
>>>>	  hpcstruct:
>>>>	    output checks: FAILED
>>>>	    output msg: '... couldn''t determine hpcstruct cpu time'
>>>>	  hpcprof: NA
>>>>	hpcstruct:
>>>>	  command: ' /bin/bash -c ''ulimit -c 204800 -u 500 -d 2097152 -f 2097152 -s 102400
>>>>	    -t unlimited ; export TIMEFORMAT=''%R %S %U''; time /home/scott/hpctoolkit-current/hpctoolkit/INSTALL/bin/hpcstruct
>>>>	    -o /home/scott/hpctest/work/study-2018-11-20--23-25-10/amgmk-%gcc--e.REALTIME@10000/OUT/06-AMGMk.hpcstruct  -I
>>>>	    ./+ /home/scott/hpctest/internal/spack/opt/spack/linux-centos7-x86_64/gcc-4.8.5/amgmk-1.0-goaesak3c32dc6e7mjjrubwr4bdqzpkq/bin/AMGMk
>>>>	    2> /home/scott/hpctest/work/study-2018-11-20--23-25-10/amgmk-%gcc--e.REALTIME@10000/OUT/08-hpcstruct-time.txt'' '
>>>>	  cpu time: null
>>>>	  status: OK
>>>>	  status msg: '... couldn''t determine hpcstruct cpu time'
		summary:
		  status: NORMAL RUN FAILED
		  status msg: '... couldn''t determine normal cpu time'
		  elapsed time: 0.47
----------------


-------------------------------------------------------------------------------------


- New commands:
    - list [ --tests | --studies ]
    - build <testspec>
    - [ cd | location ] [ --study <name> ??? ] [ --test <testspec> [ --source | --repo | --install ]
    
    
- Reporting:
	- Add variable-weight separators to report to indicate group changes
 	- optional summaries


- Alternation & wildcards in specs
 	- use 'compilerList = spack.compilers.all_compiler_specs()'
 	- or to find versions of a given compiler family,
 	  use e.g. 'compilerList = spack.compilers.find("gcc")'
 	- maybe 'compilerList = 'ppk = PackagePrefs("gcc", "compiler")'
 
 
- External repo + option to store dependencies (and compilers?) there


- Generate a top-level _OUT directory with whole-job summary info:
	- OUTs from each run
	- copy of reported table
	- Equivalent of run.log for whole job
	

- Robust iteration & continuation
 
 
- Finish implementing 'numrepeats'


- Alternate input notation based on yaml



-------------------------------------------------------------------------------------
- Is it good to divide cpu limit among mpi ranks? Or let limit be per node?
-------------------------------------------------------------------------------------
 
 
 
 FUTURE WORK
- Spack team is working on support for iterating through concretizations of specs
  (of use in combinatorial testing) "for @tgamblin's planned package build testing".
  Todd: "With the new concretizer we will have a way to iterate through all solutions,
  which would cover this case, but we'd need to provide a syntax for what to explode
  combinatorially and what not to. The test-suite file does some of that, but it
  needs some support for iterating over legal combinations".
  See https://github.com/LLNL/spack/issues/4530.
  "The test-suite file" ??
 
  
 OTHER SPACK REPOS FOR HPC APPLICATIONS
 
Arm HPC Users Group / packages Â· GitLab
https://gitlab.com/arm-hpc/packages/wikis/categories/application



MINI-APPS FROM SPACK BUILTINS

CoMD:		https://github.com/ECP-copa/CoMD/blob/master/examples/mpi-strongScaling.sh
miniAero:	https://github.com/Mantevo/miniAero/tree/master/kokkos/tests
HPCCG:		https://github.com/Mantevo/HPCCG
miniMD:		https://github.com/Mantevo/miniMD
miniGhost:	https://github.com/Mantevo/miniGhost/blob/master/ref/runtest.mpi
miniSMAC:	https://github.com/Mantevo/miniSMAC/blob/master/ref/my_batch_script_mpi_and_threads.bash

amg
amg2013
amr-exp-parabolic
aspa
branson
candle-benchmarks
clamr
cleverleaf
cloverleaf
cloverleaf3d
cns-nospec
coevp
cohmm
comd
cosp2
ebms
ecp-proxy-apps
exampm
exasp2
hacckernels
hpccg
hpgmg
kripke
laghos
lcals
lulesh
macsio
miniaero
miniamr
minife
minighost
minimd
minismac2d
minitri
minixyce
nekbone
nginx
nut
openmc
pathfinder
pennant
rsbench
r-somaticsignatures
serf
simplemoc
smc
snap
snbone
sw4lite
swfft
tealeaf
tycho2
vpfft
xfwp
xrx
xsbench
