#=================================================#
# AMG2013 PACKAGE FILE TO BE GENERATED BY HPCTEST #
#=================================================#


# from info.name, info.description, and build.kind
from spack import *
class HelloMpi(MakefilePackage):
    """ Hello WOrld for MPI testing. 
    """

# from info.homepage and info.url
    homepage = ""
    url      = ""

# from info.version
    version('1.0', 'app/hello-mpi')

# boilerplate for config.variants[@base].flags...
    @property
    def build_targets(self):
        targets = []
        
## from config.variants[@base].languages
##    languages: [ cxx ]
        languages = 'CC = {} F77 = {} F90 = {}'.format(spack_cc, spack_fc, spack_f90)
        
## from config.variants[@base].flags
        ccflags  = self.compiler.openmp_flag
        cxxflags = self.compiler.openmp_flag
        fcflags  = self.compiler.openmp_flag
        f90flags = self.compiler.openmp_flag
        ldflags  = self.compiler.openmp_flag
        
## from config.makefilename
        targets.append('-f')
        targets.append("makefile")
        
# boilerplate closing 'build_targets'
        targets.append(languages)
        targets.append('CFLAGS = {0}'.format(cflags))
        targets.append('CXXFLAGS = {0}'.format(cxxflags))
        targets.append('FCFLAGS = {0}'.format(fcflags))
        targets.append('F90FLAGS = {0}'.format(f90flags))
        targets.append('LDFLAGS = {0}'.format(ldflags))
        return targets

# from build.install
    def install(self, spec, prefix):
        mkdirp(prefix.bin)
        install('hello-c', prefix.bin)
        install('hello-f', prefix.bin)
        install('hello-f90', prefix.bin)





