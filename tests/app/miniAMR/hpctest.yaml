#=========================================#
# HPCTest description for miniAMR         #
#=========================================#


info:
  name:  miniamr
  version: 1.4.0  # must match ~spack/var/spack/repos/builtin/packages/miniamr/package.py
  homepage: https://mantevo.org
  url: https://github.com/Mantevo/miniAMR/archive/v1.4.0.tar.gz
  description: >
    miniAMR applies a stencil calculation on a unit cube computational domain,
    which is divided into blocks. The blocks all have the same number of cells
    in each direction and communicate ghost values with neighboring blocks.
    With adaptive mesh refinement, the blocks can represent different levels of
    refinement in the larger mesh. Neighboring blocks can be at the same level
    or one level different, which means that the length of cells in neighboring
    blocks can differ by only a factor of two in each direction. The calculations
    on the variables in each cell is an averaging of the values in the chosen
    stencil. The refinement and coarsening of the blocks is driven by objects
    that are pushed through the mesh. If a block intersects with the surface or
    the volume of an object, then that block can be refined. There is also an
    option to uniformly refine the mesh. Each cell contains a number of variables,
    each of which is evaluated indepently.

config: spack-builtin

run:
#   on les:   -nx/y/z:  8 => 8052 cpu sec;  4 => 5700 cpu sec;  2 => 2869 cpu sec
  cmd: ma.x --num_refine 4 --max_blocks 4000 --init_x 1 --init_y 1 --init_z 1 --npx 4 --npy 2 --npz 2 --nx 2 --ny 2 --nz 2 --num_objects 2 --object 2 0 -1.10 -1.10 -1.10 0.030 0.030 0.030 1.5 1.5 1.5 0.0 0.0 0.0 --object 2 0 0.5 0.5 1.76 0.0 0.0 -0.025 0.75 0.75 0.75 0.0 0.0 0.0 --num_tsteps 100 --checksum_freq 4 --stages_per_ts 8
  ranks: 16




